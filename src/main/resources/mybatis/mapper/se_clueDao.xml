<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuanlrc.dao.se_clueDao">
    <resultMap id="se_clueMap" type="com.yuanlrc.entity.se_clue">
        <result property="id" column="id"/>
        <result property="clue_name" column="clue_name"/>
        <result property="clue_date" column="clue_date"/>
        <result property="clue_status" column="clue_status"/>
        <result property="clue_editor" column="clue_editor"/>
        <result property="clue_discover" column="clue_discover"/>
        <result property="clue_responsible" column="clue_responsible"/>
        <result property="business_opporitunity_flag" column="business_opporitunity_flag"/>
        <result property="create_time" column="create_time"/>
        <result property="update_time" column="update_time"/>
    </resultMap>

    <select id="queryClue" resultMap="se_clueMap">
        <bind name="key_offset" value="(currentPage-1)*pageCount"/>
        select * from se_clue order by id asc
        <if test="pageCount != null and currentPage != null">
            limit #{key_offset},#{pageCount}
        </if>
    </select>

    <select id="queryClueByKey" resultMap="se_clueMap">
        select * from se_clue where clue_name like "%"#{clue_name}"%"
    </select>

    <select id="queryCount" resultType="Integer">
        select count(id) from se_clue
    </select>

    <insert id="addClue" parameterType="com.yuanlrc.entity.se_clue"
            keyProperty="id" useGeneratedKeys="true">
        insert into se_clue (id, clue_name, clue_date, clue_status, clue_editor, clue_discover, clue_responsible, business_opporitunity_flag)
        values(#{id}, #{clue_name}, #{clue_date}, #{clue_status}, #{clue_editor}, #{clue_discover}, #{clue_responsible}, #{business_opporitunity_flag})
    </insert>

    <update id="editClue" parameterType="com.yuanlrc.entity.se_clue">
        update se_clue set clue_name = #{clue_name}, clue_date = #{clue_date}, clue_status = #{clue_status}, clue_editor = #{clue_editor}, clue_discover = #{clue_discover}, clue_responsible = #{clue_responsible}, business_opporitunity_flag = #{business_opporitunity_flag}
        where id = #{id}
    </update>

    <delete id="deleteClue">
        delete from se_clue where id = #{id}
    </delete>

    <delete id="deleteClueStatus">
        delete from se_clue_status where clue_id = #{clue_id}
    </delete>
</mapper>